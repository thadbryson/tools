<?php

declare(strict_types = 1);

namespace Tool\Validation;

use BadMethodCallException;
use Closure;
use InvalidArgumentException;

/**
 * Is Validation Rule passing? Return TRUE/FALSE only.
 *
 * @method static bool string($value)
 * @method static bool stringNotEmpty($value)
 * @method static bool integer($value)
 * @method static bool integerish($value)
 * @method static bool float($value)
 * @method static bool numeric($value)
 * @method static bool natural($value)
 * @method static bool boolean($value)
 * @method static bool scalar($value)
 * @method static bool object($value)
 * @method static bool resource($value, $type = null)
 * @method static bool isCallable($value)
 * @method static bool isArray($value)
 * @method static bool isTraversable($value)
 * @method static bool isArrayAccessible($value)
 * @method static bool isCountable($value)
 * @method static bool isIterable($value)
 * @method static bool isInstanceOf($value, $class)
 * @method static bool notInstanceOf($value, $class)
 * @method static bool isInstanceOfAny($value, array $classes)
 * @method static bool isEmpty($value)
 * @method static bool notEmpty($value)
 * @method static bool null($value)
 * @method static bool notNull($value)
 * @method static bool true($value)
 * @method static bool false($value)
 * @method static bool eq($value, $value2)
 * @method static bool notEq($value, $value2)
 * @method static bool same($value, $value2)
 * @method static bool notSame($value, $value2)
 * @method static bool greaterThan($value, $limit)
 * @method static bool greaterThanEq($value, $limit)
 * @method static bool lessThan($value, $limit)
 * @method static bool lessThanEq($value, $limit)
 * @method static bool range($value, $min, $max)
 * @method static bool oneOf($value, array $values)
 * @method static bool contains($value, $subString)
 * @method static bool notContains($value, $subString)
 * @method static bool notWhitespaceOnly($value)
 * @method static bool startsWith($value, $prefix)
 * @method static bool startsWithLetter($value)
 * @method static bool endsWith($value, $suffix)
 * @method static bool regex($value, $pattern)
 * @method static bool alpha($value)
 * @method static bool digits($value)
 * @method static bool alnum($value)
 * @method static bool lower($value)
 * @method static bool upper($value)
 * @method static bool length($value, $length)
 * @method static bool minLength($value, $min)
 * @method static bool maxLength($value, $max)
 * @method static bool lengthBetween($value, $min, $max)
 * @method static bool fileExists($value)
 * @method static bool file($value)
 * @method static bool directory($value)
 * @method static bool readable($value)
 * @method static bool writable($value)
 * @method static bool classExists($value)
 * @method static bool subclassOf($value, $class)
 * @method static bool implementsInterface($value, $interface)
 * @method static bool propertyExists($classOrObject, $property)
 * @method static bool propertyNotExists($classOrObject, $property)
 * @method static bool methodExists($classOrObject, $method)
 * @method static bool methodNotExists($classOrObject, $method)
 * @method static bool keyExists($array, $key)
 * @method static bool keyNotExists($array, $key)
 * @method static bool count($array, $number)
 * @method static bool minCount($array, $min)
 * @method static bool maxCount($array, $max)
 * @method static bool countBetween($array, $min, $max)
 * @method static bool uuid($value)
 * @method static bool throws(Closure $expression, $class = 'Exception')
 * @method static bool nullOrString($value)
 * @method static bool nullOrStringNotEmpty($value)
 * @method static bool nullOrInteger($value)
 * @method static bool nullOrIntegerish($value)
 * @method static bool nullOrFloat($value)
 * @method static bool nullOrNumeric($value)
 * @method static bool nullOrBoolean($value)
 * @method static bool nullOrScalar($value)
 * @method static bool nullOrObject($value)
 * @method static bool nullOrResource($value, $type = null)
 * @method static bool nullOrIsCallable($value)
 * @method static bool nullOrIsArray($value)
 * @method static bool nullOrIsTraversable($value)
 * @method static bool nullOrIsArrayAccessible($value)
 * @method static bool nullOrIsCountable($value)
 * @method static bool nullOrIsInstanceOf($value, $class)
 * @method static bool nullOrNotInstanceOf($value, $class)
 * @method static bool nullOrIsInstanceOfAny($value, $classes)
 * @method static bool nullOrIsEmpty($value)
 * @method static bool nullOrNotEmpty($value)
 * @method static bool nullOrTrue($value)
 * @method static bool nullOrFalse($value)
 * @method static bool nullOrEq($value, $value2)
 * @method static bool nullOrNotEq($value, $value2)
 * @method static bool nullOrSame($value, $value2)
 * @method static bool nullOrNotSame($value, $value2)
 * @method static bool nullOrGreaterThan($value, $value2)
 * @method static bool nullOrGreaterThanEq($value, $value2)
 * @method static bool nullOrLessThan($value, $value2)
 * @method static bool nullOrLessThanEq($value, $value2)
 * @method static bool nullOrRange($value, $min, $max)
 * @method static bool nullOrOneOf($value, $values)
 * @method static bool nullOrContains($value, $subString)
 * @method static bool nullOrNotContains($value, $subString)
 * @method static bool nullOrNotWhitespaceOnly($value)
 * @method static bool nullOrStartsWith($value, $prefix)
 * @method static bool nullOrStartsWithLetter($value)
 * @method static bool nullOrEndsWith($value, $suffix)
 * @method static bool nullOrRegex($value, $pattern)
 * @method static bool nullOrAlpha($value)
 * @method static bool nullOrDigits($value)
 * @method static bool nullOrAlnum($value)
 * @method static bool nullOrLower($value)
 * @method static bool nullOrUpper($value)
 * @method static bool nullOrLength($value, $length)
 * @method static bool nullOrMinLength($value, $min)
 * @method static bool nullOrMaxLength($value, $max)
 * @method static bool nullOrLengthBetween($value, $min, $max)
 * @method static bool nullOrFileExists($value)
 * @method static bool nullOrFile($value)
 * @method static bool nullOrDirectory($value)
 * @method static bool nullOrReadable($value)
 * @method static bool nullOrWritable($value)
 * @method static bool nullOrClassExists($value)
 * @method static bool nullOrSubclassOf($value, $class)
 * @method static bool nullOrImplementsInterface($value, $interface)
 * @method static bool nullOrPropertyExists($value, $property)
 * @method static bool nullOrPropertyNotExists($value, $property)
 * @method static bool nullOrMethodExists($value, $method)
 * @method static bool nullOrMethodNotExists($value, $method)
 * @method static bool nullOrKeyExists($value, $key)
 * @method static bool nullOrKeyNotExists($value, $key)
 * @method static bool nullOrCount($value, $key)
 * @method static bool nullOrMinCount($value, $min)
 * @method static bool nullOrMaxCount($value, $max)
 * @method static bool nullCountBetween($value, $min, $max)
 * @method static bool nullOrUuid($values)
 * @method static bool allString($values)
 * @method static bool allStringNotEmpty($values)
 * @method static bool allInteger($values)
 * @method static bool allIntegerish($values)
 * @method static bool allFloat($values)
 * @method static bool allNumeric($values)
 * @method static bool allBoolean($values)
 * @method static bool allScalar($values)
 * @method static bool allObject($values)
 * @method static bool allResource($values, $type = null)
 * @method static bool allIsCallable($values)
 * @method static bool allIsArray($values)
 * @method static bool allIsTraversable($values)
 * @method static bool allIsArrayAccessible($values)
 * @method static bool allIsCountable($values)
 * @method static bool allIsInstanceOf($values, $class)
 * @method static bool allNotInstanceOf($values, $class)
 * @method static bool allIsInstanceOfAny($values, $classes)
 * @method static bool allNull($values)
 * @method static bool allNotNull($values)
 * @method static bool allIsEmpty($values)
 * @method static bool allNotEmpty($values)
 * @method static bool allTrue($values)
 * @method static bool allFalse($values)
 * @method static bool allEq($values, $value2)
 * @method static bool allNotEq($values, $value2)
 * @method static bool allSame($values, $value2)
 * @method static bool allNotSame($values, $value2)
 * @method static bool allGreaterThan($values, $value2)
 * @method static bool allGreaterThanEq($values, $value2)
 * @method static bool allLessThan($values, $value2)
 * @method static bool allLessThanEq($values, $value2)
 * @method static bool allRange($values, $min, $max)
 * @method static bool allOneOf($values, $values)
 * @method static bool allContains($values, $subString)
 * @method static bool allNotContains($values, $subString)
 * @method static bool allNotWhitespaceOnly($values)
 * @method static bool allStartsWith($values, $prefix)
 * @method static bool allStartsWithLetter($values)
 * @method static bool allEndsWith($values, $suffix)
 * @method static bool allRegex($values, $pattern)
 * @method static bool allAlpha($values)
 * @method static bool allDigits($values)
 * @method static bool allAlnum($values)
 * @method static bool allLower($values)
 * @method static bool allUpper($values)
 * @method static bool allLength($values, $length)
 * @method static bool allMinLength($values, $min)
 * @method static bool allMaxLength($values, $max)
 * @method static bool allLengthBetween($values, $min, $max)
 * @method static bool allFileExists($values)
 * @method static bool allFile($values)
 * @method static bool allDirectory($values)
 * @method static bool allReadable($values)
 * @method static bool allWritable($values)
 * @method static bool allClassExists($values)
 * @method static bool allSubclassOf($values, $class)
 * @method static bool allImplementsInterface($values, $interface)
 * @method static bool allPropertyExists($values, $property)
 * @method static bool allPropertyNotExists($values, $property)
 * @method static bool allMethodExists($values, $method)
 * @method static bool allMethodNotExists($values, $method)
 * @method static bool allKeyExists($values, $key)
 * @method static bool allKeyNotExists($values, $key)
 * @method static bool allCount($values, $key)
 * @method static bool allMinCount($values, $min)
 * @method static bool allMaxCount($values, $max)
 * @method static bool allCountBetween($values, $min, $max)
 * @method static bool allUuid($values)
 * @method static bool min($value, int|float $min)
 * @method static bool max($value, int|float $max)
 * @method static bool equals($value, $equals)
 * @method static bool oneOfAType($value, string[] $types)
 * @method static bool allOfAnyType(array $values, string[] $types): array
 * @method static bool inArray($value, array $array)
 * @method static bool notInArray($value, array $array)
 * @method static bool dotKeyExists(string[] $keys, array $array): array
 * @method static bool notDotKeyExists(string[] $keys, array $array): array
 * @method static bool classOrObject($value)
 */
class IsValid extends Assert
{
    /**
     * Call an Assert::* class function test and return true if no Exception was thrown.
     * Return false if an Exception was thrown.
     *
     * @param string $method
     * @param array  $arguments
     *
     * @return bool
     * @throws BadMethodCallException
     * @throws InvalidArgumentException
     */
    public static function __callStatic(string $method, array $arguments): bool
    {
        try {
            // Call parent method.
            // If InvalidArgumentException thrown: invalid, return false.
            parent::__callStatic($method, $arguments);
        } catch (InvalidArgumentException $e) {
            return false;
        }

        return true;
    }
}
