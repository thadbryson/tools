<?php

declare(strict_types = 1);

namespace Tool\Validation;

use Tool\Validation\Helper;

/**
 * Class IsValid
 *
 * Call assertion rule, return true if valud, false if not.
 *
 * @method static bool equals($value, $value2, $message = null, $propertyPath = null)
 * @method static bool eq($value, $value2, $message = null, $propertyPath = null)
 * @method static bool same($value, $value2, $message = null, $propertyPath = null)
 * @method static bool notEq($value1, $value2, $message = null, $propertyPath = null)
 * @method static bool notSame($value1, $value2, $message = null, $propertyPath = null)
 * @method static bool notInArray($value, array $choices, $message = null, $propertyPath = null)
 * @method static bool integer($value, $message = null, $propertyPath = null)
 * @method static bool float($value, $message = null, $propertyPath = null)
 * @method static bool digit($value, $message = null, $propertyPath = null)
 * @method static bool integerish($value, $message = null, $propertyPath = null)
 * @method static bool boolean($value, $message = null, $propertyPath = null)
 * @method static bool scalar($value, $message = null, $propertyPath = null)
 * @method static bool notEmpty($value, $message = null, $propertyPath = null)
 * @method static bool noContent($value, $message = null, $propertyPath = null)
 * @method static bool null($value, $message = null, $propertyPath = null)
 * @method static bool notNull($value, $message = null, $propertyPath = null)
 * @method static bool string($value, $message = null, $propertyPath = null)
 * @method static bool regex($value, $pattern, $message = null, $propertyPath = null)
 * @method static bool notRegex($value, $pattern, $message = null, $propertyPath = null)
 * @method static bool length($value, $length, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool minLength($value, $minLength, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool maxLength($value, $maxLength, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool betweenLength($value, $minLength, $maxLength, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool startsWith($string, $needle, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool endsWith($string, $needle, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool contains($string, $needle, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool notContains($string, $needle, $message = null, $propertyPath = null, $encoding = 'utf8')
 * @method static bool choice($value, array $choices, $message = null, $propertyPath = null)
 * @method static bool inArray($value, array $choices, $message = null, $propertyPath = null)
 * @method static bool numeric($value, $message = null, $propertyPath = null)
 * @method static bool isResource($value, $message = null, $propertyPath = null)
 * @method static bool isArray($value, $message = null, $propertyPath = null)
 * @method static bool isTraversable($value, $message = null, $propertyPath = null)
 * @method static bool isArrayAccessible($value, $message = null, $propertyPath = null)
 * @method static bool isCountable($value, $message = null, $propertyPath = null)
 * @method static bool keyExists($value, $key, $message = null, $propertyPath = null)
 * @method static bool keyNotExists($value, $key, $message = null, $propertyPath = null)
 * @method static bool keyIsset($value, $key, $message = null, $propertyPath = null)
 * @method static bool notEmptyKey($value, $key, $message = null, $propertyPath = null)
 * @method static bool notBlank($value, $message = null, $propertyPath = null)
 * @method static bool isInstanceOf($value, $className, $message = null, $propertyPath = null)
 * @method static bool notIsInstanceOf($value, $className, $message = null, $propertyPath = null)
 * @method static bool isSubclassOf($value, string $className, string $message = null, string $propertyPath = null)
 * @method static bool subclassOf($value, $className, $message = null, $propertyPath = null)
 * @method static bool range($value, $minValue, $maxValue, $message = null, $propertyPath = null)
 * @method static bool min($value, $minValue, $message = null, $propertyPath = null)
 * @method static bool max($value, $maxValue, $message = null, $propertyPath = null)
 * @method static bool file($value, $message = null, $propertyPath = null)
 * @method static bool directory($value, $message = null, $propertyPath = null)
 * @method static bool readable($value, $message = null, $propertyPath = null)
 * @method static bool writeable($value, $message = null, $propertyPath = null)
 * @method static bool email($value, $message = null, $propertyPath = null)
 * @method static bool url($value, $message = null, $propertyPath = null)
 * @method static bool alnum($value, $message = null, $propertyPath = null)
 * @method static bool true($value, $message = null, $propertyPath = null)
 * @method static bool false($value, $message = null, $propertyPath = null)
 * @method static bool classExists($value, $message = null, $propertyPath = null)
 * @method static bool interfaceExists($value, $message = null, $propertyPath = null)
 * @method static bool implementsInterface($class, $interfaceName, $message = null, $propertyPath = null)
 * @method static bool isJsonString($value, $message = null, $propertyPath = null)
 * @method static bool uuid($value, $message = null, $propertyPath = null)
 * @method static bool e164($value, $message = null, $propertyPath = null)
 * @method static bool count($countable, $count, $message = null, $propertyPath = null)
 * @method static bool minCount($countable, $count, $message = null, $propertyPath = null)
 * @method static bool maxCount($countable, $count, $message = null, $propertyPath = null)
 * @method static bool choicesNotEmpty(array $values, array $choices, $message = null, $propertyPath = null)
 * @method static bool methodExists($value, $object, $message = null, $propertyPath = null)
 * @method static bool isObject($value, $message = null, $propertyPath = null)
 * @method static bool lessThan($value, $limit, $message = null, $propertyPath = null)
 * @method static bool lessOrEqualThan($value, $limit, $message = null, $propertyPath = null)
 * @method static bool greaterThan($value, $limit, $message = null, $propertyPath = null)
 * @method static bool greaterOrEqualThan($value, $limit, $message = null, $propertyPath = null)
 * @method static bool between($value, $lowerLimit, $upperLimit, $message = null, $propertyPath = null)
 * @method static bool betweenExclusive($value, $lowerLimit, $upperLimit, $message = null, $propertyPath = null)
 * @method static bool extensionLoaded($value, $message = null, $propertyPath = null)
 * @method static bool date($value, $format, $message = null, $propertyPath = null)
 * @method static bool objectOrClass($value, $message = null, $propertyPath = null)
 * @method static bool propertyExists($value, $property, $message = null, $propertyPath = null)
 * @method static bool propertiesExist($value, array $properties, $message = null, $propertyPath = null)
 * @method static bool version($version1, $operator, $version2, $message = null, $propertyPath = null)
 * @method static bool phpVersion($operator, $version, $message = null, $propertyPath = null)
 * @method static bool extensionVersion($extension, $operator, $version, $message = null, $propertyPath = null)
 * @method static bool isCallable($value, $message = null, $propertyPath = null)
 * @method static bool satisfy($value, $callback, $message = null, $propertyPath = null)
 * @method static bool ip($value, $flag = null, $message = null, $propertyPath = null)
 * @method static bool ipv4($value, $flag = null, $message = null, $propertyPath = null)
 * @method static bool ipv6($value, $flag = null, $message = null, $propertyPath = null)
 * @method static bool defined($constant, $message = null, $propertyPath = null)
 * @method static bool base64($value, $message = null, $propertyPath = null)
 * @method static bool filepath($value, $message = null, $propertyPath = null)
 * @method static bool notFile($filepath, string $message = null, string $propertyPath = null)
 * @method static bool notDirectory($filepath, string $message = null, string $propertyPath = null)
 * @method static bool allAlnum(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allBase64(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allBetween(mixed $value, mixed $lowerLimit, mixed $upperLimit, string $message = null, string $propertyPath = null)
 * @method static bool allBetweenExclusive(mixed $value, mixed $lowerLimit, mixed $upperLimit, string $message = null, string $propertyPath = null)
 * @method static bool allBetweenLength(mixed $value, int $minLength, int $maxLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allBoolean(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allChoice(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool allChoicesNotEmpty(array $values, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool allClassExists(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allContains(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool allDate(string $value, string $format, string|callable $message = null, string $propertyPath = null)
 * @method static bool allDefined(mixed $constant, string|callable $message = null, string $propertyPath = null)
 * @method static bool allDigit(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allDirectory(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allE164(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allEmail(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allEndsWith(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allEq(mixed $value, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool allExtensionLoaded(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allExtensionVersion(string $extension, string $operator, mixed $version, string|callable $message = null, string $propertyPath = null)
 * @method static bool allFalse(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allFile(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allFloat(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allGreaterOrEqualThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null) Determines if the value is greater or equal than given limit for all values.
 * @method static bool allGreaterThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool allImplementsInterface(mixed $class, string $interfaceName, string|callable $message = null, string $propertyPath = null)
 * @method static bool allInArray(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool allInteger(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIntegerish(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allInterfaceExists(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIp(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIpv4(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIpv6(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsArray(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsArrayAccessible(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsCallable(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsCountable(array|\Countable|\ResourceBundle|\SimpleXMLElement $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsInstanceOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsJsonString(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsObject(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsResource(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allIsTraversable(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allKeyExists(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool allKeyIsset(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool allKeyNotExists(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool allLength(mixed $value, int $length, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allLessOrEqualThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool allLessThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool allMax(mixed $value, mixed $maxValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool allMaxCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool allMaxLength(mixed $value, int $maxLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allMethodExists(string $value, mixed $object, string|callable $message = null, string $propertyPath = null)
 * @method static bool allMin(mixed $value, mixed $minValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool allMinCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool allMinLength(mixed $value, int $minLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allNoContent(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotBlank(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotContains(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allNotEmpty(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotEmptyKey(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotEq(mixed $value1, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotInArray(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotIsInstanceOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotNull(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotRegex(mixed $value, string $pattern, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNotSame(mixed $value1, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNull(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allNumeric(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allObjectOrClass(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allPhpVersion(string $operator, mixed $version, string|callable $message = null, string $propertyPath = null)
 * @method static bool allPropertiesExist(mixed $value, array $properties, string|callable $message = null, string $propertyPath = null)
 * @method static bool allPropertyExists(mixed $value, string $property, string|callable $message = null, string $propertyPath = null)
 * @method static bool allRange(mixed $value, mixed $minValue, mixed $maxValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool allReadable(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allRegex(mixed $value, string $pattern, string|callable $message = null, string $propertyPath = null)
 * @method static bool allSame(mixed $value, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool allSatisfy(mixed $value, callable $callback, string|callable $message = null, string $propertyPath = null)
 * @method static bool allScalar(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allStartsWith(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool allString(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allSubclassOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool allTrue(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allUrl(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allUuid(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allVersion(string $version1, string $operator, string $version2, string|callable $message = null, string $propertyPath = null)
 * @method static bool allWriteable(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool allFilepath($value, $message = null, $propertyPath = null)
 * @method static bool nullOrAlnum(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrBase64(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrBetween(mixed $value, mixed $lowerLimit, mixed $upperLimit, string $message = null, string $propertyPath = null)
 * @method static bool nullOrBetweenExclusive(mixed $value, mixed $lowerLimit, mixed $upperLimit, string $message = null, string $propertyPath = null)
 * @method static bool nullOrBetweenLength(mixed $value, int $minLength, int $maxLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrBoolean(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrChoice(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrChoicesNotEmpty(array $values, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrClassExists(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrContains(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool nullOrDate(string $value, string $format, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrDefined(mixed $constant, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrDigit(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrDirectory(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrE164(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrEmail(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrEndsWith(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrEq(mixed $value, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrExtensionLoaded(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrExtensionVersion(string $extension, string $operator, mixed $version, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrFalse(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrFile(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrFloat(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrGreaterOrEqualThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrGreaterThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrImplementsInterface(mixed $class, string $interfaceName, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrInArray(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrInteger(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIntegerish(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrInterfaceExists(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIp(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIpv4(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIpv6(string $value, int $flag = null, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsArray(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsArrayAccessible(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsCallable(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsCountable(array|\Countable|\ResourceBundle|\SimpleXMLElement $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsInstanceOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsJsonString(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsObject(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsResource(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrIsTraversable(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrKeyExists(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrKeyIsset(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrKeyNotExists(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrLength(mixed $value, int $length, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrLessOrEqualThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrLessThan(mixed $value, mixed $limit, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrMax(mixed $value, mixed $maxValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrMaxCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool nullOrMaxLength(mixed $value, int $maxLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrMethodExists(string $value, mixed $object, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrMin(mixed $value, mixed $minValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrMinCount(array|\Countable|\ResourceBundle|\SimpleXMLElement $countable, int $count, string $message = null, string $propertyPath = null)
 * @method static bool nullOrMinLength(mixed $value, int $minLength, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrNoContent(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotBlank(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotContains(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrNotEmpty(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotEmptyKey(mixed $value, string|int $key, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotEq(mixed $value1, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotInArray(mixed $value, array $choices, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotIsInstanceOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotNull(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotRegex(mixed $value, string $pattern, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNotSame(mixed $value1, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNull(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrNumeric(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrObjectOrClass(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrPhpVersion(string $operator, mixed $version, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrPropertiesExist(mixed $value, array $properties, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrPropertyExists(mixed $value, string $property, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrRange(mixed $value, mixed $minValue, mixed $maxValue, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrReadable(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrRegex(mixed $value, string $pattern, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrSame(mixed $value, mixed $value2, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrSatisfy(mixed $value, callable $callback, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrScalar(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrStartsWith(mixed $string, string $needle, string|callable $message = null, string $propertyPath = null, string $encoding = 'utf8')
 * @method static bool nullOrString(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrSubclassOf(mixed $value, string $className, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrTrue(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrUrl(mixed $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrUuid(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrVersion(string $version1, string $operator, string $version2, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrWriteable(string $value, string|callable $message = null, string $propertyPath = null)
 * @method static bool nullOrFilepath($value, $message = null, $propertyPath = null)
 */
class IsValid
{
    public static function __callStatic(string $method, array $arguments)
    {
        try {
            Helper\AssertRules::{$method}(...$arguments);
        }
        catch (\InvalidArgumentException $exception) {
            return false;
        }

        return true;
    }
}
